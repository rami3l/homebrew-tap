# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Pacaptr < Formula
  desc "Pacman-like syntax wrapper for many package managers."
  homepage "https://github.com/rami3l/pacaptr"
  version "0.23.0"
  license "GPL-3.0-only"

  on_macos do
    url "https://github.com/rami3l/pacaptr/releases/download/v0.23.0/pacaptr-darwin-universal2.tar.gz"
    sha256 "aa37c4108edcab4ace8a6a52e6de309be5adc361f0bc83b25451711aa5ecb872"

    def install
      if build.head? then
        system "cargo", "install", *std_cargo_args
      else
        bin.install "pacaptr"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/rami3l/pacaptr/releases/download/v0.23.0/pacaptr-linux-amd64.tar.gz"
        sha256 "b3125d77e949d1c83d3a8195a5cdcf3b4d083d61e253adba9a91c80538a16459"

        def install
          if build.head? then
            system "cargo", "install", *std_cargo_args
          else
            bin.install "pacaptr"
          end
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/rami3l/pacaptr/releases/download/v0.23.0/pacaptr-linux-arm64.tar.gz"
        sha256 "02841d155ee76d3624c7c04426eefea15ccd892661fa90e05e70c7443931204e"

        def install
          if build.head? then
            system "cargo", "install", *std_cargo_args
          else
            bin.install "pacaptr"
          end
        end
      end
    end
  end

  head "https://github.com/rami3l/pacaptr.git"

  head do
    depends_on "rust" => :build
  end

  test do
    system "#{bin}/pacaptr --help"
  end
end
